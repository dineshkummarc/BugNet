<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider</name>
    </assembly>
    <members>
        <member name="M:BugNET.Providers.MembershipProviders.CustomMembershipUser.#ctor(System.String,System.String,System.Object,System.String,System.String,System.String,System.Boolean,System.Boolean,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BugNET.Providers.MembershipProviders.CustomMembershipUser"/> class.
            </summary>
            <param name="providername">The providername.</param>
            <param name="username">The username.</param>
            <param name="providerUserKey">The provider user key.</param>
            <param name="email">The email.</param>
            <param name="passwordQuestion">The password question.</param>
            <param name="comment">The comment.</param>
            <param name="isApproved">if set to <c>true</c> [is approved].</param>
            <param name="isLockedOut">if set to <c>true</c> [is locked out].</param>
            <param name="creationDate">The creation date.</param>
            <param name="lastLoginDate">The last login date.</param>
            <param name="lastActivityDate">The last activity date.</param>
            <param name="lastPasswordChangedDate">The last password changed date.</param>
            <param name="lastLockedOutDate">The last locked out date.</param>
            <param name="displayName">The display name.</param>
            <param name="firstName">The first name.</param>
            <param name="lastName">The last name.</param>
        </member>
        <member name="P:BugNET.Providers.MembershipProviders.CustomMembershipUser.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
            <value>The first name.</value>
        </member>
        <member name="P:BugNET.Providers.MembershipProviders.CustomMembershipUser.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
            <value>The last name.</value>
        </member>
        <member name="P:BugNET.Providers.MembershipProviders.CustomMembershipUser.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="T:BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider">
            <summary>
            Extended membership provider
            </summary>
        </member>
        <member name="M:BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
            <summary>
            Adds a new user to the SQL Server membership database.
            </summary>
            <param name="username">The user name for the new user.</param>
            <param name="password">The password for the new user.</param>
            <param name="email">The e-mail address for the new user.</param>
            <param name="passwordQuestion">The password question for the new user.</param>
            <param name="passwordAnswer">The password answer for the new user.</param>
            <param name="isApproved">Whether or not the new user is approved to be validated.</param>
            <param name="providerUserKey">A <see cref="T:System.Guid"></see> that uniquely identifies the membership user in the SQL Server database.</param>
            <param name="status">One of the <see cref="T:System.Web.Security.MembershipCreateStatus"></see> values, indicating whether the user was created successfully.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object for the newly created user. If no user was created, this method returns null.
            </returns>
        </member>
        <member name="M:BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider.GetUser(System.String,System.Boolean)">
            <summary>
            Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.
            </summary>
            <param name="username">The name of the user to get information for.</param>
            <param name="userIsOnline">true to update the last activity date/time stamp for the user; false to return user information without updating the last activity date/time stamp for the user.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object representing the specified user. If no user is found in the database for the specified username value, null is returned.
            </returns>
            <exception cref="T:System.ArgumentException">username exceeds 256 characters.- or -username contains a comma.</exception>
            <exception cref="T:System.ArgumentNullException">username is null.</exception>
        </member>
        <member name="M:BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of all the users in the SQL Server membership database.
            </summary>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of users.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> of <see cref="T:System.Web.Security.MembershipUser"></see> objects representing all the users in the database for the configured <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName"></see>.
            </returns>
            <exception cref="T:System.ArgumentException">pageIndex is less than zero.- or -pageSize is less than one.- or -pageIndex multiplied by pageSize plus pageSize minus one exceeds <see cref="F:System.Int32.MaxValue"></see>.</exception>
        </member>
        <member name="M:BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a collection of membership users where the user name contains the specified user name to match.
            </summary>
            <param name="usernameToMatch">The user name to search for.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">When this method returns, contains the total number of matched users.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> that contains a page of pageSize<see cref="T:System.Web.Security.MembershipUser"></see> objects beginning at the page specified by pageIndex.
            </returns>
            <exception cref="T:System.ArgumentException">usernameToMatch is an empty string ("") or is longer than 256 characters.- or -pageIndex is less than zero.- or -pageSize is less than 1.- or -pageIndex multiplied by pageSize plus pageSize minus one exceeds <see cref="F:System.Int32.MaxValue"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">usernameToMatch is null.</exception>
        </member>
        <member name="M:BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns a collection of membership users for which the e-mail address field contains the specified e-mail address.
            </summary>
            <param name="emailToMatch">The e-mail address to search for.</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of matched users.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUserCollection"></see> that contains a page of pageSize<see cref="T:System.Web.Security.MembershipUser"></see> objects beginning at the page specified by pageIndex.
            </returns>
            <exception cref="T:System.ArgumentException">emailToMatch is longer than 256 characters.- or -pageIndex is less than zero.- or -pageSize is less than one.- or -pageIndex multiplied by pageSize plus pageSize minus one exceeds <see cref="F:System.Int32.MaxValue"></see>.</exception>
        </member>
        <member name="M:BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
            <summary>
            Updates information about a user in the SQL Server membership database.
            </summary>
            <param name="user">A <see cref="T:System.Web.Security.MembershipUser"></see> object that represents the user to update and the updated information for the user.</param>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.UserName"></see> property of user is an empty string (""), contains a comma, or is longer than 256 characters.- or -The <see cref="P:System.Web.Security.MembershipUser.Email"></see> property of user is longer than 256 characters.- or -The <see cref="P:System.Web.Security.MembershipUser.Email"></see> property of user is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail"></see> is set to true.</exception>
            <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.MembershipUser.UserName"></see> property of user was not found in the database.- or -The <see cref="P:System.Web.Security.MembershipUser.Email"></see> property of user was equal to an existing e-mail address in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail"></see> is set to true.- or -The user update failed.</exception>
            <exception cref="T:System.ArgumentNullException">user is null. - or -The <see cref="P:System.Web.Security.MembershipUser.UserName"></see> property of user is null.- or -The <see cref="P:System.Web.Security.MembershipUser.Email"></see> property of user is null and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail"></see> is set to true.</exception>
        </member>
        <member name="M:BugNET.Providers.MembershipProviders.ExtendedSqlMembershipProvider.GetUser(System.Object,System.Boolean)">
            <summary>
            Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.
            </summary>
            <param name="providerUserKey">The unique identifier for the user.</param>
            <param name="userIsOnline">true to update the last-activity date/time stamp for the specified user; otherwise, false.</param>
            <returns>
            A <see cref="T:System.Web.Security.MembershipUser"></see> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified providerUserKey value, null is returned.
            </returns>
            <exception cref="T:System.ArgumentNullException">providerUserKey is null. </exception>
            <exception cref="T:System.ArgumentException">providerUserKey is not of type <see cref="T:System.Guid"></see>.</exception>
        </member>
    </members>
</doc>
